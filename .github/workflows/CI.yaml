name: CI

on:
  push:
    branches:
      - "main"
    paths:
      - "pyscreener/**"
      - "tests/**"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: "0 0 * * *"

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: [3.8]
      fail-fast: true

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: devtools/conda-envs/test_env.yaml
        channels: conda-forge,defaults
        activate-environment: pyscreener-test
        auto-update-conda: false
        auto-activate-base: false
        show-channel-urls: true

    - name: Install package
      shell: bash -l {0}
      run: |
        pip install flake8
        pip install . --no-deps

    - name: check for fatal syntax errors
      shell: bash -l {0}
      run: |
        flake8 pyscreener --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Run tests
      shell: bash -l {0}
      run: |
        pytest -k "not vina" --cov-report=xml --color=yes

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
